{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCpBA,eAIA,oBAAyBQ,GACvB,IAAIC,EAAaC,EAAOC,SAASC,gBAC/B,2BACA,KACE,MAAMC,EAASH,EAAOI,OAAOC,iBAC7B,GAAIF,EAAQ,CACV,MAAMG,EAAaH,EAAOI,UAAUC,OAAOC,KAAO,EAC5CC,EAAe,gBAAgBJ,SAC/BK,EAAc,IAAIX,EAAOY,SAASN,EAAa,EAAG,GACxDH,EAAOU,MAAMC,IACXA,EAAYC,OAAOJ,EAAaD,EAAa,G,KAMrDZ,EAAQkB,cAAcC,KAAKlB,EAC7B,EAGA,wBAA8B,C","sources":["webpack://log-line-number/external commonjs \"vscode\"","webpack://log-line-number/webpack/bootstrap","webpack://log-line-number/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from \"vscode\";\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n  let disposable = vscode.commands.registerCommand(\n    \"extension.logLineNumber\",\n    () => {\n      const editor = vscode.window.activeTextEditor;\n      if (editor) {\n        const lineNumber = editor.selection.active.line + 1;\n        const logStatement = `console.log('${lineNumber}');\\n`;\n        const newPosition = new vscode.Position(lineNumber - 1, 0);\n        editor.edit((editBuilder) => {\n          editBuilder.insert(newPosition, logStatement);\n        });\n      }\n    }\n  );\n\n  context.subscriptions.push(disposable);\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","disposable","vscode","commands","registerCommand","editor","window","activeTextEditor","lineNumber","selection","active","line","logStatement","newPosition","Position","edit","editBuilder","insert","subscriptions","push"],"sourceRoot":""}